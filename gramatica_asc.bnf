
<expresion> ::= <datatype>
            | <expComp>
            | <expBool>

<datatype> ::=  <colName>
            | <literal>
            | <funcCall>
            | <datatype> '+' <datatype>
            | <datatype> '-' <datatype>
            | <datatype> '/' <datatype>
            | <datatype> '*' <datatype> 
            | <datatype> '%' <datatype>
            | <datatype> '^' <datatype>
            | <datatype> '||' <datatype>
            | <datatype> '&' <datatype>
            | <datatype> '|' <datatype>
            | <datatype> '#' <datatype>
            | <datatype> '~' <datatype>
            | <datatype> '>>' <datatype>
            | <datatype> '<<' <datatype>
            | '(' <datatype> ')'

<expComp> ::= <datatype> '<' <datatype>
            | <datatype> '>' <datatype>
            | <datatype> '>=' <datatype>
            | <datatype> '<=' <datatype>
            | <datatype> '=' <datatype>
            | <datatype> '!=' <datatype>
            | <datatype> '<>' <datatype>
            | <datatype> BETWEEN <datatype> AND <datatype>
            | <datatype> NOT BETWEEN <datatype> AND <datatype>
            | <datatype> BETWEEN SYMMETRIC <datatype> AND <datatype>
            | <datatype> IS DISTINCT FFROM <datatype>
            | <datatype> IS NOT DISTINCT FROM <datatype>
            | <datatype> IS NULL
            | <datatype> IS NOT NULL
            | <datatype> ISNULL
            | <datatype> NOTNULL
            | <datatype> IS TRUE
            | <datatype> IS NOT TRUE
            | <datatype> IS FALSE
            | <datatype> IS NOT FALSE
            | <datatype> IS UNKNOWN
            | <datatype> IS NOT UNKNOWN

<expSubq> ::= <datatype> '<'  <subqValues> '(' <selectStmt> ')'
            | <datatype> '>'  <subqValues> '(' <selectStmt> ')'
            | <datatype> '>=' <subqValues> '(' <selectStmt> ')'
            | <datatype> '<=' <subqValues> '(' <selectStmt> ')'
            | <datatype> '='  <subqValues> '(' <selectStmt> ')'
            | <datatype> '!=' <subqValues> '(' <selectStmt> ')'
            | <datatype> '<>' <subqValues> '(' <selectStmt> ')'
            | <datatype> BETWEEN <datatype> AND <datatype> <subqValues> '(' <selectStmt> ')'
            | <datatype> NOT BETWEEN <datatype> AND <datatype> <subqValues> '(' <selectStmt> ')'
            | <datatype> BETWEEN SYMMETRIC <datatype> AND <datatype> <subqValues> '(' <selectStmt> ')'
            | <datatype> IS DISTINCT FFROM <datatype> <subqValues> '(' <selectStmt> ')'
            | <datatype> IS NOT DISTINCT FROM <datatype> <subqValues> '(' <selectStmt> ')'
            | <datatype> IS NULL <subqValues> '(' <selectStmt> ')'
            | <datatype> IS NOT NULL <subqValues> '(' <selectStmt> ')'
            | <datatype> ISNULL <subqValues> '(' <selectStmt> ')'
            | <datatype> NOTNULL <subqValues> '(' <selectStmt> ')'
            | <datatype> IS TRUE <subqValues> '(' <selectStmt> ')'
            | <datatype> IS NOT TRUE <subqValues> '(' <selectStmt> ')'
            | <datatype> IS FALSE <subqValues> '(' <selectStmt> ')'
            | <datatype> IS NOT FALSE <subqValues> '(' <selectStmt> ')'
            | <datatype> IS UNKNOWN <subqValues> '(' <selectStmt> ')'
            | <datatype> IS NOT UNKNOWN <subqValues> '(' <selectStmt> ')'

<subqValues> ::= ALL
                | ANY
                | SOME

<boolean> ::= <expComp>
            | litBool
            | EXISTS '(' <selectStmt> ')'
            | <datatype> IN '(' <selectStmt> ')'
            | <datatype> NOT IN '(' <selectStmt> ')'
            | <expSubq>

<expBool> ::= <expBool> AND <boolean>
            | <expBool> OR <boolean>
            | NOT <expBool>
            | <boolean>

<booleanCheck> ::= <expComp>
            | litBool

<expBoolCheck> ::= <expBoolCheck> AND <booleanCheck>
            | <expBoolCheck> OR <booleanCheck>
            | NOT <expBoolCheck>
            | <booleanCheck>

<literal> ::= litBool
            | litString
            | litNum
            | litChar

<funcCall> ::= funcMath '(' <paramList> ')'
            | funcBool '(' <paramList> ')'
            | funcTrig '(' <paramList> ')'

<paramList> ::= <paramList> ',' <datatype>
            | <datatype>

<stmt> ::= <selectStmt>
        | <createStmt>

<selectStmt> ::= SELECT <selectParams> FROM <tableExp> <joinList> <whereCl> <groupByCl> <orderByCl> <limitCl>
            | SELECT DISTINCT <selectParams> FROM <tableExp> <whereCl> <groupByCl>

<selectParams> ::= '*'
                | <selectList>

<selectList> ::= <selectList> ',' <expresion> 
            | <expresion>

<tableExp> ::= <tableExp> ',' <fromBody>
            | <fromBody> 

<colName> ::= id
            | id.id

<fromBody> ::= <colName>
            | '(' <selectStmt> ')'

<joinList> ::= <joinList> <joinCl>
            | <joinCl>

<joinCl> ::= <joinOpt> JOIN <colName> ON <expBool>
        | <joinOpt> JOIN <colName> USING '(' <nameList> ')'
        | NATURAL <joinOpt> JOIN <colName>
        |

<nameList> ::= <nameList> ',' <colName>
            | <colName>

<joinOpt> ::= INNER
            | LEFT 
            | LEFT OUTER
            | RIGHT
            | RIGHT OUTER
            | FULL
            | FULL OUTER

<whereCl> ::= WHERE <expBool>
            | /*epsilon*/

<groupByCl> ::= GROUP BY <groupList> <havingCl>
            | 

<groupList> ::=  <groupList> ',' <colName>
            | <groupElem>

<havingCl> ::= HAVING <expBool>
            |

<orderByCl> ::= ORDER BY <orderList>

<orderList> ::= <orderList> ',' <orderByElem>
            | <orderByElem>

<orderByElem> ::= <colName> <orderOpts> <orderNull>

<orderOpts> ::= ASC
            | DESC
            |

<orderNull> ::= NULL FIRST
            | NULL LAST
            |

<limitCl> ::= number <offsetLimit>
            | ALL <offsetLimit>
            |

<offsetLimit> ::= OFFSET number
                |

<createStmt> ::= CREATE <createBody>

<createBody> ::= OR REPLACE <createOpts>
             | <createOpts>

<createOpts> ::= TABLE <ifNotExists> id '(' <createTableList> ')'
            | DATABASE <ifNotExists> id <createOwner> <createMode>
            | TYPE <ifNotExists> id AS ENUM '(' <paramList> ')'

<ifNotExists> ::= IF NOT EXISTS
                | 

<createTableList> ::= <createTableList> ',' <createTable>
                    | <createTable>

<createTable> ::= id id <createOpts>
                | <createConstraint>
                | <createUnique>
                | <createPrimary>
                | <createForeign>

<createOpts> ::= <colOptionsList>
            | 

<createConstraint> ::= <constrName> CHECK '(' <expBoolCheck> ')'

<createUnique> ::= UNIQUE '(' <idList> ')'

<idList> ::= <idList> ',' id
        | id

<createPrimary> ::= PRIMARY KEY '(' <idList> ')'

<createForeign> ::= FOREIGN KEY '(' <idList> ')' REFERENCES id '(' <idList> ')'

<constrName> ::= CONSTRAINT id 
            |

<colOptionsList> ::= <colOptionsList> <colOptions>
                | <colOptions>

<colOptions> ::= <defaultVal>
            | <nullOpt>
            | <constraintOpt>
            | <primaryOpt>
            | <referencesOpt>

<defaultVal> ::= DEFAULT <datatype>

<nullOpt> ::= NOT NULL
            | NULL

<constraintOpt> ::= <constrName> UNIQUE
                | <constrName> CHECK '(' <expBoolCheck> ')'

<primaryOpt> ::= PRIMARY KEY

<referencesOpt> ::= REFERENCES id

<createOwner> ::= OWNER id
                | OWNER '=' id
                |

<createMode> ::= MODE number
             | MODE '=' number
             |

